unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls,WinSock,   ScktComp,   CheckLst;
 const 
  MAX_ADAPTER_NAME_LENGTH = 256;
  MAX_ADAPTER_DESCRIPTION_LENGTH = 128;
  MAX_ADAPTER_ADDRESS_LENGTH = 8;
type
  TIP_ADDRESS_STRING = record
    IPstring: array [0..15] of Char;
  end;
  PIP_ADDRESS_STRING = ^TIP_ADDRESS_STRING;
  TIP_MASK_STRING = TIP_ADDRESS_STRING;
  PIP_MASK_STRING = ^TIP_MASK_STRING;

  PIP_ADDR_STRING = ^TIP_ADDR_STRING;
  TIP_ADDR_STRING = record
    Next: PIP_ADDR_STRING;
    IpAddress: TIP_ADDRESS_STRING;
    IpMask: TIP_MASK_STRING;
    Context:DWORD;
  end;

  PIP_ADAPTER_INFO = ^TIP_ADAPTER_INFO;
  TIP_ADAPTER_INFO = packed record
    Next: PIP_ADAPTER_INFO;
    ComboIndex: DWORD;
    AdapterName: array [0..MAX_ADAPTER_NAME_LENGTH + 4-1] of Char;
    Description: array [0..MAX_ADAPTER_DESCRIPTION_LENGTH + 4-1] of Char;
    AddressLength: UINT;
    Address: array [0..MAX_ADAPTER_ADDRESS_LENGTH-1] of BYTE;
    Index: DWORD;
    dwType: UINT;
    DhcpEnabled: UINT;
    CurrentIpAddress: PIP_ADDR_STRING;
    IpAddressList: TIP_ADDR_STRING;
    GatewayList: TIP_ADDR_STRING;
    DhcpServer: TIP_ADDR_STRING;
    HaveWins: BOOL;
    PrimaryWinsServer: TIP_ADDR_STRING;
    SecondaryWinsServer: TIP_ADDR_STRING;
  end;
  ///////////////
  TForm1 = class(TForm)
    Button1: TButton;
    function   GetipFangshi:Boolean;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation
function   GetAdaptersInfo(pAdapterInfo: PIP_ADAPTER_INFO;
                pOutBufLen: PDWORD): DWORD; stdcall;
                external 'IPHLPAPI.DLL' name 'GetAdaptersInfo';
{$R *.dfm}
function TForm1.GetipFangshi:Boolean;

var
  pbuf:PIP_ADAPTER_INFO;
  buflen:DWORD;
  i:   integer;
begin
  buflen:= 0;
  if GetAdaptersInfo(pbuf, @bufLen) = ERROR_BUFFER_OVERFLOW then
  begin
    pbuf:= AllocMem(buflen);
    if GetAdaptersInfo(pbuf, @bufLen) = ERROR_SUCCESS then
    while pbuf <> nil do
    begin
      //showmessage( IntToStr( pbuf.DhcpEnabled ) );//1动态分配
      if  pbuf.DhcpEnabled=1 then
      Result:=False else
      Result:=True;
      pbuf   :=   pbuf.Next;
    end;
    FreeMem(pbuf);
  end;
end;
  function test:string;
  begin
Result:='
[zjnbjsq]3CBB208C8231A122BCFE6C0A1CA56DED1D77BB0BFA5CC8F42CEF2F491D529EE14FD5654B0BE9A202C07F91A682D35CCB62A38054A1AEC1709F50D2BEB1CF5777F30715903C39E77D1374BE8850750864F9E8C786A0A4D83BCA18E18554DD2E8AA68E85B2FDF7BCE8653184A65E88914DACC9A034C04EAC0B4F0D2F0E33077C8E81FDE0D9C53C34E9D209F695A75AE5F3D8E74CDC1DC9C900D37373169B86A6F940C3C41A0230F1486561D94C863816519ADCCF78020AAE21EEA4F7B09995996A0BD1A7398EFA1D4CA74A6F076DE02CBD0F6A88AD5CC696718D40F6AABAF07186315CCA1D76D7FC7452AD6D2B4BC2C3F5F1F23DA3442C679633793004844859544EDB0AE7E0EFE8F6F1D4449AF34D67DCD337B433F6F0F653759341D47D90D48942C5EC049A3BAF902CEC14ECC0BF0941564D196162DC2F0BE02928FBB3C41BB64F9CF3E886EBE1ED9654967514DD29B1E1F29FCE00B95EB758AA6DA77C181DCEE3BEFFE026C78816ABD4B7BAFCCE9C3766B40E3351EE7447AA31A8FBDA811AA9439699949287132175CCBE3D968FC62DA745FA90DF30FD0299CBC107CA8D3BB0BCF3ABDB079B653E949E09AE863A47B7BAD0CFEB59908E34E2E671737735FFCCCA6D3A96AF4A5E228AF95546A01D5E9A6A06BE4D50CDB97F68350B20DB594A80528A1394838A5B47440749BBD39C76FC4FAFF5C05708A3B03182BC8EB67168060499B2D67DD5B26888BDBA02EF5445AFDDC60917CCB5518B4BE0B1E2F14D0325D75746425641F4C723AB746AF568FE781694747D873F8111B562FF762AA4ECE4E4197E7A73A7ED6340DE3D68C39499ECEA14944CD83D6FE8A859ECABDEF50E891A735960C9A06E068E1DC2AD1C78D0E076494E9B3486653894AF10C203864EEA56AFFBD76C9829F512FBFE345B2D338A[/zjnbjsq]
';
   end;  
procedure TForm1.Button1Click(Sender: TObject);
begin
if GetipFangshi=True then
ShowMessage('你的电脑是固定IP上网')
else
ShowMessage('你的电脑是动态IP上网');
end;

end.
 